//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/FreschGamesCore/Runtime/Data/Input/CoreInputAsset.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace FreschGames.Core.Input
{
    public partial class @CoreInputAsset : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @CoreInputAsset()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""CoreInputAsset"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""d12a3d5c-6f8d-4c80-a0e7-3464d7112eba"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""dec59179-dd00-4db3-a02d-30f1e639f96a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""e374e618-68cf-4611-998b-891fe5d011e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""d8d481bc-4fdf-4f60-a262-29a5916266ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""9f7f82ab-c8a6-4baa-9b60-f86117d3e6f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ViewDelta"",
                    ""type"": ""Value"",
                    ""id"": ""cf5cd650-aefc-466a-aa8f-f34234bc4bf7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ViewPoint"",
                    ""type"": ""Value"",
                    ""id"": ""6253fca4-169e-462f-8058-7d8629d156fd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollDelta"",
                    ""type"": ""Value"",
                    ""id"": ""5fc2733e-6c3d-48b2-a241-c004f64405b6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Action01"",
                    ""type"": ""Button"",
                    ""id"": ""9246d7dc-768a-4b00-a851-9d5a9044736a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Action02"",
                    ""type"": ""Button"",
                    ""id"": ""bd140fda-cd12-4f5b-938a-8736416da0c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""e3388206-a945-47e6-92b0-e6fbf283f613"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""90110c8d-c101-4d7e-ba3c-8908501ddb37"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""90baa3e9-9403-400c-b9de-fb303010068c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""aa52dbae-ce84-452f-9538-11799e8a41e4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""17f115ae-8e24-4ae1-9583-235a598c57c2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c83aef0d-6ed2-4959-b1ef-4d4b45a4da51"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ViewDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ae5bbba-f53e-4e54-bd70-d5a899fd31a1"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ViewPoint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9f31ee9-66df-423e-bdf9-41630656539f"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4fe42cb8-fbe8-4966-b7e1-b9c19f779194"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Action01"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""076d3412-f109-4667-bafe-53c5014a94d5"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4fe31706-1546-4640-b237-65d106039a18"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Action02"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f01b3de1-4376-44c6-b126-23c1bd0bb6a4"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57a38c68-b0c8-426c-a7aa-7f6ca1bfd097"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Player
            m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
            m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
            m_Player_Sprint = m_Player.FindAction("Sprint", throwIfNotFound: true);
            m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
            m_Player_Crouch = m_Player.FindAction("Crouch", throwIfNotFound: true);
            m_Player_ViewDelta = m_Player.FindAction("ViewDelta", throwIfNotFound: true);
            m_Player_ViewPoint = m_Player.FindAction("ViewPoint", throwIfNotFound: true);
            m_Player_ScrollDelta = m_Player.FindAction("ScrollDelta", throwIfNotFound: true);
            m_Player_Action01 = m_Player.FindAction("Action01", throwIfNotFound: true);
            m_Player_Action02 = m_Player.FindAction("Action02", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Player
        private readonly InputActionMap m_Player;
        private IPlayerActions m_PlayerActionsCallbackInterface;
        private readonly InputAction m_Player_Move;
        private readonly InputAction m_Player_Sprint;
        private readonly InputAction m_Player_Jump;
        private readonly InputAction m_Player_Crouch;
        private readonly InputAction m_Player_ViewDelta;
        private readonly InputAction m_Player_ViewPoint;
        private readonly InputAction m_Player_ScrollDelta;
        private readonly InputAction m_Player_Action01;
        private readonly InputAction m_Player_Action02;
        public struct PlayerActions
        {
            private @CoreInputAsset m_Wrapper;
            public PlayerActions(@CoreInputAsset wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Player_Move;
            public InputAction @Sprint => m_Wrapper.m_Player_Sprint;
            public InputAction @Jump => m_Wrapper.m_Player_Jump;
            public InputAction @Crouch => m_Wrapper.m_Player_Crouch;
            public InputAction @ViewDelta => m_Wrapper.m_Player_ViewDelta;
            public InputAction @ViewPoint => m_Wrapper.m_Player_ViewPoint;
            public InputAction @ScrollDelta => m_Wrapper.m_Player_ScrollDelta;
            public InputAction @Action01 => m_Wrapper.m_Player_Action01;
            public InputAction @Action02 => m_Wrapper.m_Player_Action02;
            public InputActionMap Get() { return m_Wrapper.m_Player; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
            public void SetCallbacks(IPlayerActions instance)
            {
                if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                    @Sprint.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                    @Sprint.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                    @Sprint.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                    @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                    @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                    @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                    @Crouch.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                    @Crouch.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                    @Crouch.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                    @ViewDelta.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnViewDelta;
                    @ViewDelta.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnViewDelta;
                    @ViewDelta.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnViewDelta;
                    @ViewPoint.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnViewPoint;
                    @ViewPoint.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnViewPoint;
                    @ViewPoint.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnViewPoint;
                    @ScrollDelta.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnScrollDelta;
                    @ScrollDelta.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnScrollDelta;
                    @ScrollDelta.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnScrollDelta;
                    @Action01.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAction01;
                    @Action01.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAction01;
                    @Action01.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAction01;
                    @Action02.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAction02;
                    @Action02.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAction02;
                    @Action02.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAction02;
                }
                m_Wrapper.m_PlayerActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @Sprint.started += instance.OnSprint;
                    @Sprint.performed += instance.OnSprint;
                    @Sprint.canceled += instance.OnSprint;
                    @Jump.started += instance.OnJump;
                    @Jump.performed += instance.OnJump;
                    @Jump.canceled += instance.OnJump;
                    @Crouch.started += instance.OnCrouch;
                    @Crouch.performed += instance.OnCrouch;
                    @Crouch.canceled += instance.OnCrouch;
                    @ViewDelta.started += instance.OnViewDelta;
                    @ViewDelta.performed += instance.OnViewDelta;
                    @ViewDelta.canceled += instance.OnViewDelta;
                    @ViewPoint.started += instance.OnViewPoint;
                    @ViewPoint.performed += instance.OnViewPoint;
                    @ViewPoint.canceled += instance.OnViewPoint;
                    @ScrollDelta.started += instance.OnScrollDelta;
                    @ScrollDelta.performed += instance.OnScrollDelta;
                    @ScrollDelta.canceled += instance.OnScrollDelta;
                    @Action01.started += instance.OnAction01;
                    @Action01.performed += instance.OnAction01;
                    @Action01.canceled += instance.OnAction01;
                    @Action02.started += instance.OnAction02;
                    @Action02.performed += instance.OnAction02;
                    @Action02.canceled += instance.OnAction02;
                }
            }
        }
        public PlayerActions @Player => new PlayerActions(this);
        public interface IPlayerActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnSprint(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnCrouch(InputAction.CallbackContext context);
            void OnViewDelta(InputAction.CallbackContext context);
            void OnViewPoint(InputAction.CallbackContext context);
            void OnScrollDelta(InputAction.CallbackContext context);
            void OnAction01(InputAction.CallbackContext context);
            void OnAction02(InputAction.CallbackContext context);
        }
    }
}
